{"version":3,"sources":["../node_modules/react-player/lib/players/YouTube.js"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","configurable","writable","__defNormalProp","YouTube_exports","target","all","name","__export","default","YouTube","module","exports","import_react","isNodeMode","__esModule","__toESM","require","import_utils","import_patterns","MATCH_PLAYLIST","MATCH_USER_UPLOADS","MATCH_NOCOOKIE","arguments","callPlayer","url","Array","listType","playlist","map","getID","join","test","match","list","replace","event","data","props","onPlay","onPause","onBuffer","onBufferEnd","onEnded","onReady","loop","config","playerVars","onUnstarted","window","PlayerState","UNSTARTED","PLAYING","PAUSED","BUFFERING","ENDED","CUED","isPlaylist","start","seekTo","play","container","this","onMount","MATCH_URL_YOUTUBE","isReady","playing","muted","playsinline","controls","onError","embedOptions","id","player","loadPlaylist","parsePlaylist","cueVideoById","videoId","startSeconds","parseStartTime","endSeconds","parseEndTime","end","getSDK","YT","loaded","then","Player","width","height","autoplay","mute","origin","location","events","setLoop","onPlaybackRateChange","onPlaybackQualityChange","onStateChange","host","console","warn","document","body","contains","amount","keepPlaying","pause","fraction","rate","getDuration","style","display","createElement","ref","Component","canPlay","youtube"],"mappings":"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","file":"static/js/reactPlayerYouTube.62f36ca9.chunk.js","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar YouTube_exports = {};\n__export(YouTube_exports, {\n  default: () => YouTube\n});\nmodule.exports = __toCommonJS(YouTube_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nconst SDK_URL = \"https://www.youtube.com/iframe_api\";\nconst SDK_GLOBAL = \"YT\";\nconst SDK_GLOBAL_READY = \"onYouTubeIframeAPIReady\";\nconst MATCH_PLAYLIST = /[?&](?:list|channel)=([a-zA-Z0-9_-]+)/;\nconst MATCH_USER_UPLOADS = /user\\/([a-zA-Z0-9_-]+)\\/?/;\nconst MATCH_NOCOOKIE = /youtube-nocookie\\.com/;\nconst NOCOOKIE_HOST = \"https://www.youtube-nocookie.com\";\nclass YouTube extends import_react.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\n    __publicField(this, \"parsePlaylist\", (url) => {\n      if (url instanceof Array) {\n        return {\n          listType: \"playlist\",\n          playlist: url.map(this.getID).join(\",\")\n        };\n      }\n      if (MATCH_PLAYLIST.test(url)) {\n        const [, playlistId] = url.match(MATCH_PLAYLIST);\n        return {\n          listType: \"playlist\",\n          list: playlistId.replace(/^UC/, \"UU\")\n        };\n      }\n      if (MATCH_USER_UPLOADS.test(url)) {\n        const [, username] = url.match(MATCH_USER_UPLOADS);\n        return {\n          listType: \"user_uploads\",\n          list: username\n        };\n      }\n      return {};\n    });\n    __publicField(this, \"onStateChange\", (event) => {\n      const { data } = event;\n      const { onPlay, onPause, onBuffer, onBufferEnd, onEnded, onReady, loop, config: { playerVars, onUnstarted } } = this.props;\n      const { UNSTARTED, PLAYING, PAUSED, BUFFERING, ENDED, CUED } = window[SDK_GLOBAL].PlayerState;\n      if (data === UNSTARTED)\n        onUnstarted();\n      if (data === PLAYING) {\n        onPlay();\n        onBufferEnd();\n      }\n      if (data === PAUSED)\n        onPause();\n      if (data === BUFFERING)\n        onBuffer();\n      if (data === ENDED) {\n        const isPlaylist = !!this.callPlayer(\"getPlaylist\");\n        if (loop && !isPlaylist) {\n          if (playerVars.start) {\n            this.seekTo(playerVars.start);\n          } else {\n            this.play();\n          }\n        }\n        onEnded();\n      }\n      if (data === CUED)\n        onReady();\n    });\n    __publicField(this, \"mute\", () => {\n      this.callPlayer(\"mute\");\n    });\n    __publicField(this, \"unmute\", () => {\n      this.callPlayer(\"unMute\");\n    });\n    __publicField(this, \"ref\", (container) => {\n      this.container = container;\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n  }\n  getID(url) {\n    if (!url || url instanceof Array || MATCH_PLAYLIST.test(url)) {\n      return null;\n    }\n    return url.match(import_patterns.MATCH_URL_YOUTUBE)[1];\n  }\n  load(url, isReady) {\n    const { playing, muted, playsinline, controls, loop, config, onError } = this.props;\n    const { playerVars, embedOptions } = config;\n    const id = this.getID(url);\n    if (isReady) {\n      if (MATCH_PLAYLIST.test(url) || MATCH_USER_UPLOADS.test(url) || url instanceof Array) {\n        this.player.loadPlaylist(this.parsePlaylist(url));\n        return;\n      }\n      this.player.cueVideoById({\n        videoId: id,\n        startSeconds: (0, import_utils.parseStartTime)(url) || playerVars.start,\n        endSeconds: (0, import_utils.parseEndTime)(url) || playerVars.end\n      });\n      return;\n    }\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY, (YT) => YT.loaded).then((YT) => {\n      if (!this.container)\n        return;\n      this.player = new YT.Player(this.container, {\n        width: \"100%\",\n        height: \"100%\",\n        videoId: id,\n        playerVars: {\n          autoplay: playing ? 1 : 0,\n          mute: muted ? 1 : 0,\n          controls: controls ? 1 : 0,\n          start: (0, import_utils.parseStartTime)(url),\n          end: (0, import_utils.parseEndTime)(url),\n          origin: window.location.origin,\n          playsinline: playsinline ? 1 : 0,\n          ...this.parsePlaylist(url),\n          ...playerVars\n        },\n        events: {\n          onReady: () => {\n            if (loop) {\n              this.player.setLoop(true);\n            }\n            this.props.onReady();\n          },\n          onPlaybackRateChange: (event) => this.props.onPlaybackRateChange(event.data),\n          onPlaybackQualityChange: (event) => this.props.onPlaybackQualityChange(event),\n          onStateChange: this.onStateChange,\n          onError: (event) => onError(event.data)\n        },\n        host: MATCH_NOCOOKIE.test(url) ? NOCOOKIE_HOST : void 0,\n        ...embedOptions\n      });\n    }, onError);\n    if (embedOptions.events) {\n      console.warn(\"Using `embedOptions.events` will likely break things. Use ReactPlayer\\u2019s callback props instead, eg onReady, onPlay, onPause\");\n    }\n  }\n  play() {\n    this.callPlayer(\"playVideo\");\n  }\n  pause() {\n    this.callPlayer(\"pauseVideo\");\n  }\n  stop() {\n    if (!document.body.contains(this.callPlayer(\"getIframe\")))\n      return;\n    this.callPlayer(\"stopVideo\");\n  }\n  seekTo(amount, keepPlaying = false) {\n    this.callPlayer(\"seekTo\", amount);\n    if (!keepPlaying && !this.props.playing) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {\n    this.callPlayer(\"setVolume\", fraction * 100);\n  }\n  setPlaybackRate(rate) {\n    this.callPlayer(\"setPlaybackRate\", rate);\n  }\n  setLoop(loop) {\n    this.callPlayer(\"setLoop\", loop);\n  }\n  getDuration() {\n    return this.callPlayer(\"getDuration\");\n  }\n  getCurrentTime() {\n    return this.callPlayer(\"getCurrentTime\");\n  }\n  getSecondsLoaded() {\n    return this.callPlayer(\"getVideoLoadedFraction\") * this.getDuration();\n  }\n  render() {\n    const { display } = this.props;\n    const style = {\n      width: \"100%\",\n      height: \"100%\",\n      display\n    };\n    return /* @__PURE__ */ import_react.default.createElement(\"div\", { style }, /* @__PURE__ */ import_react.default.createElement(\"div\", { ref: this.ref }));\n  }\n}\n__publicField(YouTube, \"displayName\", \"YouTube\");\n__publicField(YouTube, \"canPlay\", import_patterns.canPlay.youtube);\n"],"sourceRoot":""}